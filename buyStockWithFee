class Solution {
public:
    int solve(vector<int>&nums,int i,int buy,vector<vector<int>>&dp,int fee){
        int n =  nums.size();
        if(i>=n)return 0;
        if(dp[i][buy] != -1)return dp[i][buy];
        int ans = 0;


        if(buy==0){
            ans = max(solve(nums,i+1,1,dp,fee)-nums[i],solve(nums,i+1,0,dp,fee));
        }
        else{
            ans = max(solve(nums,i+1,0,dp,fee)+nums[i]-fee,solve(nums,i+1,1,dp,fee));
        }

        return dp[i][buy]=ans;
    }
    int maxProfit(vector<int>& nums, int fee) {
         int n = nums.size();
        vector<vector<int>>dp(n,vector<int>(2,-1));
        return solve(nums,0,0,dp,fee);
    }
};
